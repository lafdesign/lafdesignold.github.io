/*! Compiled on: 2014-06-05 */
"use strict";define(["modules/app","position"],function(app){app.factoryManager("typeaheadParser",["$parse",function($parse){var TYPEAHEAD_REGEXP=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(input){var match=input.match(TYPEAHEAD_REGEXP);if(!match)throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '"+input+"'.");return{itemName:match[3],source:$parse(match[4]),viewMapper:$parse(match[2]||match[1]),modelMapper:$parse(match[1])}}}}]),app.directiveManager("typeahead",["$compile","$parse","$q","$timeout","$document","$position","typeaheadParser",function($compile,$parse,$q,$timeout,$document,$position,typeaheadParser){var HOT_KEYS=[9,13,27,38,40];return{require:"ngModel",link:function(originalScope,element,attrs,modelCtrl){originalScope.opened=!1;var minSearch=originalScope.$eval(attrs.typeaheadMinLength)||1,waitTime=originalScope.$eval(attrs.typeaheadWaitMs)||0,isEditable=originalScope.$eval(attrs.typeaheadEditable)!==!1,isLoadingSetter=$parse(attrs.typeaheadLoading).assign||angular.noop,onSelectCallback=$parse(attrs.typeaheadOnSelect),inputFormatter=attrs.typeaheadInputFormatter?$parse(attrs.typeaheadInputFormatter):void 0,$setModelValue=$parse(attrs.ngModel).assign,parserResult=typeaheadParser.parse(attrs.typeahead),popUpEl=angular.element("<typeahead-popup></typeahead-popup>");popUpEl.attr({matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query",position:"position",opened:"opened"}),angular.isDefined(attrs.typeaheadTemplateUrl)&&popUpEl.attr("template-url",attrs.typeaheadTemplateUrl);var scope=originalScope.$new();originalScope.$on("$destroy",function(){scope.$destroy()});var resetMatches=function(){scope.matches=[],scope.activeIdx=-1},getMatchesAsync=function(inputValue){var locals={$viewValue:inputValue};isLoadingSetter(originalScope,!0),originalScope.$watch("results",function(results){if(void 0===results)return!1;var matches=parserResult.source(scope,locals);if(scope.totalMatches=0,inputValue===modelCtrl.$viewValue){if(matches.length>0){scope.matches.length=0,originalScope.opened=!0;for(var i=0;i<matches.length;i++)if("object"==typeof matches[i]){scope.matches.push({type:"category",label:matches[i][0].category,category:matches[i][0].category,model:matches[i][0].category});for(var k=0;k<matches[i].length;k++)locals[parserResult.itemName]=matches[i][k].term,scope.totalMatches++,scope.matches.push({label:parserResult.viewMapper(scope,locals),model:matches[i][k].term,uri:matches[i][k].uri})}else locals[parserResult.itemName]=matches[i],scope.matches.push({label:parserResult.viewMapper(scope,locals),model:matches[i]});scope.query=inputValue,scope.position=$position.position(element),scope.position.top=scope.position.top+element.prop("offsetHeight")}else originalScope.opened=!1,resetMatches();isLoadingSetter(originalScope,!1)}})};resetMatches(),scope.query=void 0;var timeoutPromise;modelCtrl.$parsers.unshift(function(inputValue){return""==inputValue&&(originalScope.opened=!1),resetMatches(),inputValue&&inputValue.length>=minSearch&&(waitTime>0?(timeoutPromise&&$timeout.cancel(timeoutPromise),timeoutPromise=$timeout(function(){getMatchesAsync(inputValue)},waitTime)):getMatchesAsync(inputValue)),isEditable?inputValue:void modelCtrl.$setValidity("editable",!1)}),modelCtrl.$formatters.push(function(modelValue){var candidateViewValue,emptyViewValue,locals={};return inputFormatter?(locals.$model=modelValue,inputFormatter(originalScope,locals)):(locals[parserResult.itemName]=modelValue,candidateViewValue=parserResult.viewMapper(originalScope,locals),locals[parserResult.itemName]=void 0,emptyViewValue=parserResult.viewMapper(originalScope,locals),candidateViewValue!==emptyViewValue?candidateViewValue:modelValue)}),scope.select=function(activeIdx){var model,item,locals={};return void 0!==scope.matches[activeIdx].category?!1:(locals[parserResult.itemName]=item=scope.matches[activeIdx].model,model=parserResult.modelMapper(originalScope,locals),$setModelValue(originalScope,model),modelCtrl.$setValidity("editable",!0),originalScope.uri=scope.matches[activeIdx].uri,onSelectCallback(originalScope,{$item:item,$model:model,$label:parserResult.viewMapper(originalScope,locals)}),originalScope.opened=!1,resetMatches(),void element[0].focus())},element.bind("keydown",function(evt){if(0!==scope.matches.length&&-1!==HOT_KEYS.indexOf(evt.which)){var next=0;40===evt.which?(evt.preventDefault(),next=void 0!==scope.matches[(scope.activeIdx+1)%scope.matches.length].category?2:1,scope.activeIdx=(scope.activeIdx+next)%scope.matches.length,scope.$digest()):38===evt.which?(evt.preventDefault(),scope.activeIdx>0?scope.activeIdx=void 0!==scope.matches[(scope.activeIdx-1?scope.activeIdx:scope.matches.length)-1].category?scope.totalMatches-1:(scope.activeIdx-1?scope.activeIdx:scope.matches.length)-1:void 0!==scope.matches[scope.activeIdx-1].category&&(scope.activeIdx=void 0!==scope.matches[scope.matches.length-1].category?scope.totalMatches-1:scope.matches.length-1),scope.$digest()):13===evt.which||9===evt.which?scope.activeIdx>-1&&(evt.preventDefault(),scope.$apply(function(){scope.select(scope.activeIdx)})):27===evt.which&&(evt.preventDefault(),evt.stopPropagation(),originalScope.$apply(function(){originalScope.opened=!1}),resetMatches(),scope.$digest())}});var dismissClickHandler=function(evt){element[0]!==evt.target&&(originalScope.$apply(function(){originalScope.opened=!1}),resetMatches(),scope.$digest())};$document.bind("click",dismissClickHandler),originalScope.$on("$destroy",function(){$document.unbind("click",dismissClickHandler)}),element.after($compile(popUpEl)(scope))}}}]),app.directiveManager("typeaheadPopup",function(){return{restrict:"E",scope:{matches:"=",query:"=",active:"=",position:"=",opened:"=",select:"&"},replace:!0,templateUrl:"/release/html/directives/typeahead-popup.html",link:function(scope,element,attrs){scope.opened=!1,scope.templateUrl=attrs.templateUrl,scope.isOpen=function(){return scope.opened=scope.matches.length>0?!0:!1,scope.opened},scope.isActive=function(matchIdx){return scope.active==matchIdx},scope.selectActive=function(matchIdx){scope.active=matchIdx},scope.selectMatch=function(activeIdx){scope.select({activeIdx:activeIdx})}}}}),app.directiveManager("typeaheadMatch",["$http","$templateCache","$compile","$parse",function($http,$templateCache,$compile,$parse){return{restrict:"E",scope:{index:"=",match:"=",query:"="},link:function(scope,element,attrs){var tplUrl=$parse(attrs.templateUrl)(scope.$parent)||"/release/html/directives/typeahead-match.html";$http.get(tplUrl,{cache:$templateCache}).success(function(tplContent){element.replaceWith($compile(tplContent.trim())(scope))})}}}]),app.filterManager("match",function(){return function(sources,query){if(!query)return sources;var category,categories=[],matches=[],compare=function(source){if(null!==source)if("object"==typeof source&&void 0===source.name)for(var key in source)isNaN(parseInt(key))&&(category=key),compare(source[key],query);else if("string"==typeof source.name&&-1!=source.name.toLowerCase().indexOf(query.toLowerCase()))if(category){var object={category:category,term:source.name.trim(),uri:source.uri};void 0!==categories[category]?matches[categories[category]].push(object):(categories[category]=matches.length,matches.push([object]))}else matches.push(source)};return compare(sources,query),matches}}),app.filterManager("typeaheadHighlight",function(){function escapeRegexp(queryToEscape){return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(matchItem,query){return query?matchItem.replace(new RegExp(escapeRegexp(query),"gi"),"<strong>$&</strong>"):matchItem}})});