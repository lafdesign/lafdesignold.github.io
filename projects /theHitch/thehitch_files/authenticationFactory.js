/*! Compiled on: 2014-06-05 */
define(["modules/app","usersFactory"],function(app){app.factoryManager("authenticationFactory",["$resource","$q","$rootScope","$cookies","$http","config","$cacheFactory","usersFactory","$modal","$loading",function($resource,$q,$rootScope,$cookies,$http,config,$cacheFactory,usersFactory,$modal,$loading){var eventListeners=[];$rootScope.$on("loginRequired",function(scope,options){self.openSignInModal(options)});var success=function(headers){$cookies.set("access_token",headers("access-token")),$cookies.set("refresh_token",headers("refresh-token")),$cookies.set("token_expiry",headers("expiration")),usersFactory.getCurrentUserFromAPI()};return self.on=function(name,callback){eventListeners.push({name:name,callback:callback})},self.trigger=function(name,args){for(var i=0;i<eventListeners.length;i++)(eventListeners[i].name=name)&&eventListeners[i].callback(args)},self.refreshAccessToken=function(){var deferred=$q.defer();return $http({method:"POST",data:{refresh_token:$cookies.get("refresh_token")},url:config.host+"/refresh"}).success(function(data){$cookies.set("access_token",data.access_token),$cookies.set("token_expiry",data.expires),deferred.resolve()}).error(function(){$cookies.remove("access_token"),$cookies.remove("refresh_token"),$cookies.remove("token_expiry"),$rootScope.$broadcast("loginRequired"),deferred.reject()}),deferred.promise},self.isLoggedIn=function(withApi){if(withApi="undefined"==typeof withApi?!1:!0,!$cookies.get("access_token")||!$cookies.get("refresh_token")||!$cookies.get("token_expiry"))return self.trigger("authentication","loggedout"),!1;if(withApi)usersFactory.isLoggedIn().then(function(){console.log("User Is Logged In")},function(){console.log("User NOT Is Logged In"),self.signOut()});else if(!(Math.round((new Date).getTime()/1e3)>$cookies.get("token_expiry")))return self.trigger("authentication","loggedin"),!0},self.signOut=function(){self.trigger("authentication","loggedout"),$cookies.remove("access_token"),$cookies.remove("refresh_token"),$cookies.remove("token_expiry"),usersFactory.removeCurrentUser()},self.openSignInModal=function(options){options="undefined"==typeof options?{}:options;$modal.open({templateUrl:"/release/html/partials/signin.html",controller:"authenticationInstanceCtrl",resolve:{message:function(){return"undefined"!=typeof options.message?options.message:"To begin your search, please enter your<br />email address and password."},onSuccess:function(){return"undefined"!=typeof options.onSuccess?options.onSuccess:null}}})},self.openForgotPasswordModal=function(options){options="undefined"==typeof options?{}:options;$modal.open({templateUrl:"/release/html/partials/forgotPassword.html",controller:"authenticationInstanceCtrl",resolve:{message:function(){return"undefined"!=typeof options.message?options.message:"Forgot your password? Not a problem. Just enter the email you used to sign up, and weâ€™ll send you a link to reset it."},onSuccess:function(){return"undefined"!=typeof options.onSuccess?options.onSuccess:null}}})},self.openSignUpModal=function(options){options="undefined"==typeof options?{}:options;$modal.open({templateUrl:"/release/html/partials/signup.html",controller:"authenticationInstanceCtrl",resolve:{message:function(){return"undefined"!=typeof options.message?options.message:"The Hitch is a platform for discovering, viewing, and booking top wedding venues around the world. To begin, simply provide the details below."},onSuccess:function(){return"undefined"!=typeof options.onSuccess?options.onSuccess:null}}})},self.signUp=function(data){return $loading.start(),$http({method:"POST",data:{username:data.email,password:data.password,first_name:data.first_name,last_name:data.last_name,type:void 0===data.type?"user":data.type,account_type:"email",grant_type:"Hitch"},url:config.host+"/signup"}).success(function(data,status,headers){return $loading.end(),headers("access-token")?(success(headers),!0):void console.log("There was an error")}).error(function(){$loading.end()})},self.signIn=function(data){return $loading.start(),$http({method:"POST",data:{username:data.email,password:data.password,type:void 0===data.type?"user":data.type,account_type:"email",grant_type:"password"},url:config.host+"/signin"}).success(function(data){return $loading.end(),data.access_token?($cookies.set("access_token",data.access_token),$cookies.set("refresh_token",data.refresh_token),$cookies.set("token_expiry",data.expires),usersFactory.getCurrentUserFromAPI(),!0):void console.log("There was an error")}).error(function(){$loading.end()})},self}])});